{"dependencies":[{"name":"@tensorflow/tfjs-core","loc":{"line":1,"column":20}},{"name":"./scaleLayer","loc":{"line":2,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.conv = conv;\nexports.convNoRelu = convNoRelu;\nexports.convDown = convDown;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar tf = _interopRequireWildcard(_tfjsCore);\n\nvar _scaleLayer = require(\"./scaleLayer\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction convLayer(x, params, strides, withRelu, padding) {\n  if (padding === void 0) {\n    padding = 'same';\n  }\n  var _a = params.conv,\n      filters = _a.filters,\n      bias = _a.bias;\n  var out = tf.conv2d(x, filters, strides, padding);\n  out = tf.add(out, bias);\n  out = (0, _scaleLayer.scale)(out, params.scale);\n  return withRelu ? tf.relu(out) : out;\n}\nfunction conv(x, params) {\n  return convLayer(x, params, [1, 1], true);\n}\nfunction convNoRelu(x, params) {\n  return convLayer(x, params, [1, 1], false);\n}\nfunction convDown(x, params) {\n  return convLayer(x, params, [2, 2], true, 'valid');\n}\n//# sourceMappingURL=convLayer.js.map"},"hash":"ebb5cc62a13ed3e8c5731d483f1b40a4"}