{"dependencies":[{"name":"@tensorflow/tfjs-core","loc":{"line":1,"column":20}},{"name":"./leaky","loc":{"line":2,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.depthwiseSeparableConv = depthwiseSeparableConv;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar tf = _interopRequireWildcard(_tfjsCore);\n\nvar _leaky = require(\"./leaky\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction depthwiseSeparableConv(x, params) {\n  return tf.tidy(function () {\n    var out = tf.pad(x, [[0, 0], [1, 1], [1, 1], [0, 0]]);\n    out = tf.separableConv2d(out, params.depthwise_filter, params.pointwise_filter, [1, 1], 'valid');\n    out = tf.add(out, params.bias);\n    return (0, _leaky.leaky)(out);\n  });\n}\n//# sourceMappingURL=depthwiseSeparableConv.js.map"},"hash":"9dcfe2c6f3da2b5595fa2dccb3cc7a88"}