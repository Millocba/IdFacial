{"dependencies":[{"name":"tslib","loc":{"line":1,"column":39}},{"name":"@tensorflow/tfjs-core","loc":{"line":2,"column":20}},{"name":"../dom","loc":{"line":3,"column":73}},{"name":"../env","loc":{"line":4,"column":20}},{"name":"./normalize","loc":{"line":5,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractImagePatches = extractImagePatches;\n\nvar _tslib = require(\"tslib\");\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar tf = _interopRequireWildcard(_tfjsCore);\n\nvar _dom = require(\"../dom\");\n\nvar _env = require(\"../env\");\n\nvar _normalize = require(\"./normalize\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction extractImagePatches(img, boxes, _a) {\n  var width = _a.width,\n      height = _a.height;\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n    var imgCtx, bitmaps, imagePatchesDatas;\n    var _this = this;\n    return (0, _tslib.__generator)(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          imgCtx = (0, _dom.getContext2dOrThrow)(img);\n          return [4 /*yield*/, Promise.all(boxes.map(function (box) {\n            return (0, _tslib.__awaiter)(_this, void 0, void 0, function () {\n              var _a, y, ey, x, ex, fromX, fromY, imgData;\n              return (0, _tslib.__generator)(this, function (_b) {\n                _a = box.padAtBorders(img.height, img.width), y = _a.y, ey = _a.ey, x = _a.x, ex = _a.ex;\n                fromX = x - 1;\n                fromY = y - 1;\n                imgData = imgCtx.getImageData(fromX, fromY, ex - fromX, ey - fromY);\n                return [2 /*return*/, _env.env.isNodejs() ? (0, _dom.createCanvasFromMedia)(imgData) : createImageBitmap(imgData)];\n              });\n            });\n          }))];\n        case 1:\n          bitmaps = _b.sent();\n          imagePatchesDatas = [];\n          bitmaps.forEach(function (bmp) {\n            var patch = (0, _dom.createCanvas)({ width: width, height: height });\n            var patchCtx = (0, _dom.getContext2dOrThrow)(patch);\n            patchCtx.drawImage(bmp, 0, 0, width, height);\n            var data = patchCtx.getImageData(0, 0, width, height).data;\n            var currData = [];\n            // RGBA -> BGR\n            for (var i = 0; i < data.length; i += 4) {\n              currData.push(data[i + 2]);\n              currData.push(data[i + 1]);\n              currData.push(data[i]);\n            }\n            imagePatchesDatas.push(currData);\n          });\n          return [2 /*return*/, imagePatchesDatas.map(function (data) {\n            var t = tf.tidy(function () {\n              var imagePatchTensor = tf.transpose(tf.tensor4d(data, [1, width, height, 3]), [0, 2, 1, 3]).toFloat();\n              return (0, _normalize.normalize)(imagePatchTensor);\n            });\n            return t;\n          })];\n      }\n    });\n  });\n}\n//# sourceMappingURL=extractImagePatches.js.map"},"hash":"e6383d08f0ea064e41800583b5643ad9"}