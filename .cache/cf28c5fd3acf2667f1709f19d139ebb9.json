{"dependencies":[{"name":"tslib","loc":{"line":1,"column":50}},{"name":"../factories/WithFaceExpressions","loc":{"line":2,"column":42}},{"name":"./ComposableTask","loc":{"line":3,"column":31}},{"name":"./ComputeFaceDescriptorsTasks","loc":{"line":4,"column":79}},{"name":"./extractFacesAndComputeResults","loc":{"line":5,"column":84}},{"name":"./nets","loc":{"line":6,"column":21}},{"name":"./PredictAgeAndGenderTask","loc":{"line":7,"column":168}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PredictSingleFaceExpressionsWithFaceAlignmentTask = exports.PredictAllFaceExpressionsWithFaceAlignmentTask = exports.PredictSingleFaceExpressionsTask = exports.PredictAllFaceExpressionsTask = exports.PredictFaceExpressionsTaskBase = undefined;\n\nvar _tslib = require(\"tslib\");\n\nvar _WithFaceExpressions = require(\"../factories/WithFaceExpressions\");\n\nvar _ComposableTask = require(\"./ComposableTask\");\n\nvar _ComputeFaceDescriptorsTasks = require(\"./ComputeFaceDescriptorsTasks\");\n\nvar _extractFacesAndComputeResults = require(\"./extractFacesAndComputeResults\");\n\nvar _nets = require(\"./nets\");\n\nvar _PredictAgeAndGenderTask = require(\"./PredictAgeAndGenderTask\");\n\nvar PredictFaceExpressionsTaskBase = /** @class */function (_super) {\n  (0, _tslib.__extends)(PredictFaceExpressionsTaskBase, _super);\n  function PredictFaceExpressionsTaskBase(parentTask, input, extractedFaces) {\n    var _this = _super.call(this) || this;\n    _this.parentTask = parentTask;\n    _this.input = input;\n    _this.extractedFaces = extractedFaces;\n    return _this;\n  }\n  return PredictFaceExpressionsTaskBase;\n}(_ComposableTask.ComposableTask);\nexports.PredictFaceExpressionsTaskBase = PredictFaceExpressionsTaskBase;\n\nvar PredictAllFaceExpressionsTask = /** @class */function (_super) {\n  (0, _tslib.__extends)(PredictAllFaceExpressionsTask, _super);\n  function PredictAllFaceExpressionsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictAllFaceExpressionsTask.prototype.run = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var parentResults, faceExpressionsByFace;\n      var _this = this;\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResults = _a.sent();\n            return [4 /*yield*/, (0, _extractFacesAndComputeResults.extractAllFacesAndComputeResults)(parentResults, this.input, function (faces) {\n              return (0, _tslib.__awaiter)(_this, void 0, void 0, function () {\n                return (0, _tslib.__generator)(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, Promise.all(faces.map(function (face) {\n                        return _nets.nets.faceExpressionNet.predictExpressions(face);\n                      }))];\n                    case 1:\n                      return [2 /*return*/, _a.sent()];\n                  }\n                });\n              });\n            }, this.extractedFaces)];\n          case 2:\n            faceExpressionsByFace = _a.sent();\n            return [2 /*return*/, parentResults.map(function (parentResult, i) {\n              return (0, _WithFaceExpressions.extendWithFaceExpressions)(parentResult, faceExpressionsByFace[i]);\n            })];\n        }\n      });\n    });\n  };\n  PredictAllFaceExpressionsTask.prototype.withAgeAndGender = function () {\n    return new _PredictAgeAndGenderTask.PredictAllAgeAndGenderTask(this, this.input);\n  };\n  return PredictAllFaceExpressionsTask;\n}(PredictFaceExpressionsTaskBase);\nexports.PredictAllFaceExpressionsTask = PredictAllFaceExpressionsTask;\n\nvar PredictSingleFaceExpressionsTask = /** @class */function (_super) {\n  (0, _tslib.__extends)(PredictSingleFaceExpressionsTask, _super);\n  function PredictSingleFaceExpressionsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictSingleFaceExpressionsTask.prototype.run = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var parentResult, faceExpressions;\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResult = _a.sent();\n            if (!parentResult) {\n              return [2 /*return*/];\n            }\n            return [4 /*yield*/, (0, _extractFacesAndComputeResults.extractSingleFaceAndComputeResult)(parentResult, this.input, function (face) {\n              return _nets.nets.faceExpressionNet.predictExpressions(face);\n            }, this.extractedFaces)];\n          case 2:\n            faceExpressions = _a.sent();\n            return [2 /*return*/, (0, _WithFaceExpressions.extendWithFaceExpressions)(parentResult, faceExpressions)];\n        }\n      });\n    });\n  };\n  PredictSingleFaceExpressionsTask.prototype.withAgeAndGender = function () {\n    return new _PredictAgeAndGenderTask.PredictSingleAgeAndGenderTask(this, this.input);\n  };\n  return PredictSingleFaceExpressionsTask;\n}(PredictFaceExpressionsTaskBase);\nexports.PredictSingleFaceExpressionsTask = PredictSingleFaceExpressionsTask;\n\nvar PredictAllFaceExpressionsWithFaceAlignmentTask = /** @class */function (_super) {\n  (0, _tslib.__extends)(PredictAllFaceExpressionsWithFaceAlignmentTask, _super);\n  function PredictAllFaceExpressionsWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\n    return new _PredictAgeAndGenderTask.PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptors = function () {\n    return new _ComputeFaceDescriptorsTasks.ComputeAllFaceDescriptorsTask(this, this.input);\n  };\n  return PredictAllFaceExpressionsWithFaceAlignmentTask;\n}(PredictAllFaceExpressionsTask);\nexports.PredictAllFaceExpressionsWithFaceAlignmentTask = PredictAllFaceExpressionsWithFaceAlignmentTask;\n\nvar PredictSingleFaceExpressionsWithFaceAlignmentTask = /** @class */function (_super) {\n  (0, _tslib.__extends)(PredictSingleFaceExpressionsWithFaceAlignmentTask, _super);\n  function PredictSingleFaceExpressionsWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\n    return new _PredictAgeAndGenderTask.PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptor = function () {\n    return new _ComputeFaceDescriptorsTasks.ComputeSingleFaceDescriptorTask(this, this.input);\n  };\n  return PredictSingleFaceExpressionsWithFaceAlignmentTask;\n}(PredictSingleFaceExpressionsTask);\nexports.PredictSingleFaceExpressionsWithFaceAlignmentTask = PredictSingleFaceExpressionsWithFaceAlignmentTask;\n//# sourceMappingURL=PredictFaceExpressionsTask.js.map"},"hash":"bb0c6deb83a52cead8e03cea968efc89"}