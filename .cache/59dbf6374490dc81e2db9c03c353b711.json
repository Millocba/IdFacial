{"dependencies":[{"name":"tslib","loc":{"line":1,"column":26}},{"name":"@tensorflow/tfjs-core","loc":{"line":2,"column":20}},{"name":"../common/fullyConnectedLayer","loc":{"line":3,"column":36}},{"name":"../dom","loc":{"line":4,"column":25}},{"name":"../NeuralNetwork","loc":{"line":5,"column":30}},{"name":"./extractParams","loc":{"line":6,"column":30}},{"name":"./extractParamsFromWeigthMap","loc":{"line":7,"column":43}},{"name":"./util","loc":{"line":8,"column":35}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FaceProcessor = undefined;\n\nvar _tslib = require(\"tslib\");\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar tf = _interopRequireWildcard(_tfjsCore);\n\nvar _fullyConnectedLayer = require(\"../common/fullyConnectedLayer\");\n\nvar _dom = require(\"../dom\");\n\nvar _NeuralNetwork = require(\"../NeuralNetwork\");\n\nvar _extractParams = require(\"./extractParams\");\n\nvar _extractParamsFromWeigthMap = require(\"./extractParamsFromWeigthMap\");\n\nvar _util = require(\"./util\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar FaceProcessor = /** @class */function (_super) {\n  (0, _tslib.__extends)(FaceProcessor, _super);\n  function FaceProcessor(_name, faceFeatureExtractor) {\n    var _this = _super.call(this, _name) || this;\n    _this._faceFeatureExtractor = faceFeatureExtractor;\n    return _this;\n  }\n  Object.defineProperty(FaceProcessor.prototype, \"faceFeatureExtractor\", {\n    get: function () {\n      return this._faceFeatureExtractor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  FaceProcessor.prototype.runNet = function (input) {\n    var _this = this;\n    var params = this.params;\n    if (!params) {\n      throw new Error(this._name + \" - load model before inference\");\n    }\n    return tf.tidy(function () {\n      var bottleneckFeatures = input instanceof _dom.NetInput ? _this.faceFeatureExtractor.forwardInput(input) : input;\n      return (0, _fullyConnectedLayer.fullyConnectedLayer)(bottleneckFeatures.as2D(bottleneckFeatures.shape[0], -1), params.fc);\n    });\n  };\n  FaceProcessor.prototype.dispose = function (throwOnRedispose) {\n    if (throwOnRedispose === void 0) {\n      throwOnRedispose = true;\n    }\n    this.faceFeatureExtractor.dispose(throwOnRedispose);\n    _super.prototype.dispose.call(this, throwOnRedispose);\n  };\n  FaceProcessor.prototype.loadClassifierParams = function (weights) {\n    var _a = this.extractClassifierParams(weights),\n        params = _a.params,\n        paramMappings = _a.paramMappings;\n    this._params = params;\n    this._paramMappings = paramMappings;\n  };\n  FaceProcessor.prototype.extractClassifierParams = function (weights) {\n    return (0, _extractParams.extractParams)(weights, this.getClassifierChannelsIn(), this.getClassifierChannelsOut());\n  };\n  FaceProcessor.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    var _a = (0, _util.seperateWeightMaps)(weightMap),\n        featureExtractorMap = _a.featureExtractorMap,\n        classifierMap = _a.classifierMap;\n    this.faceFeatureExtractor.loadFromWeightMap(featureExtractorMap);\n    return (0, _extractParamsFromWeigthMap.extractParamsFromWeigthMap)(classifierMap);\n  };\n  FaceProcessor.prototype.extractParams = function (weights) {\n    var cIn = this.getClassifierChannelsIn();\n    var cOut = this.getClassifierChannelsOut();\n    var classifierWeightSize = cOut * cIn + cOut;\n    var featureExtractorWeights = weights.slice(0, weights.length - classifierWeightSize);\n    var classifierWeights = weights.slice(weights.length - classifierWeightSize);\n    this.faceFeatureExtractor.extractWeights(featureExtractorWeights);\n    return this.extractClassifierParams(classifierWeights);\n  };\n  return FaceProcessor;\n}(_NeuralNetwork.NeuralNetwork);\nexports.FaceProcessor = FaceProcessor;\n//# sourceMappingURL=FaceProcessor.js.map"},"hash":"3a81d3c0f3754ebacb7a02d409959989"}