{"id":"main.js","dependencies":[{"name":"C:\\Users\\el_mi\\OneDrive\\Escritorio\\IdFacial\\package.json","includedInParent":true,"mtime":1663188368777},{"name":"../node_modules/babel-polyfill","loc":{"line":1,"column":7,"index":7},"parent":"C:\\Users\\el_mi\\OneDrive\\Escritorio\\IdFacial\\src\\main.js","resolved":"C:\\Users\\el_mi\\OneDrive\\Escritorio\\IdFacial\\node_modules\\babel-polyfill\\lib\\index.js"},{"name":"../node_modules/face-api.js","loc":{"line":3,"column":25,"index":69},"parent":"C:\\Users\\el_mi\\OneDrive\\Escritorio\\IdFacial\\src\\main.js","resolved":"C:\\Users\\el_mi\\OneDrive\\Escritorio\\IdFacial\\node_modules\\face-api.js\\build\\es6\\index.js"},{"name":"./uploader","loc":{"line":5,"column":21,"index":124},"parent":"C:\\Users\\el_mi\\OneDrive\\Escritorio\\IdFacial\\src\\main.js","resolved":"C:\\Users\\el_mi\\OneDrive\\Escritorio\\IdFacial\\src\\uploader.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"../node_modules/babel-polyfill\");\n\nvar faceapi = _interopRequireWildcard(require(\"../node_modules/face-api.js\"));\n\nvar _uploader = _interopRequireDefault(require(\"./uploader\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar main = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var videoContainer, canvas, context, video, match, reDraw, processFace;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            videoContainer = document.querySelector('.js-video');\n            canvas = document.getElementById('js-canvas');\n            context = canvas.getContext('2d');\n            _context3.next = 5;\n            return navigator.mediaDevices.getUserMedia({\n              video: true\n            });\n\n          case 5:\n            video = _context3.sent;\n            _context3.next = 8;\n            return faceapi.nets.tinyFaceDetector.loadFromUri('/models');\n\n          case 8:\n            _context3.next = 10;\n            return faceapi.nets.faceExpressionNet.loadFromUri('/models');\n\n          case 10:\n            _context3.next = 12;\n            return faceapi.nets.faceLandmark68Net.loadFromUri('/models');\n\n          case 12:\n            _context3.next = 14;\n            return faceapi.nets.faceRecognitionNet.loadFromUri('/models');\n\n          case 14:\n            match = (0, _uploader.default)('.input-submit', '.images-list');\n            videoContainer.srcObject = video;\n\n            reDraw = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        context.drawImage(videoContainer, 0, 0, 640, 480);\n                        requestAnimationFrame(reDraw);\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function reDraw() {\n                return _ref2.apply(this, arguments);\n              };\n            }(); // procesado de imagenes del canvas\n\n\n            processFace = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                var detection;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return faceapi.detectSingleFace(canvas, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n\n                      case 2:\n                        detection = _context2.sent;\n\n                        if (!(typeof detection === 'undefined')) {\n                          _context2.next = 5;\n                          break;\n                        }\n\n                        return _context2.abrupt(\"return\");\n\n                      case 5:\n                        match(detection.descriptor); // comparacion con el resultado de las detecciones del contenedor de imagenes\n\n                      case 6:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function processFace() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            setInterval(processFace, 1000);\n            requestAnimationFrame(reDraw);\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function main() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmain();\nvar nav = document.querySelector('#navhamb');\ndocument.querySelector('#burger').addEventListener('click', function (e) {\n  e.currentTarget.classList.toggle(\"active\");\n  nav.classList.toggle('show');\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":47},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":23,"column":4},"source":"main.js","original":{"line":7,"column":6},"name":"main"},{"generated":{"line":23,"column":8},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":24,"column":2},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":24,"column":72},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":25,"column":4},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":26,"column":4},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":27,"column":6},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":28,"column":8},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":29,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":30,"column":12},"source":"main.js","original":{"line":8,"column":10},"name":"videoContainer"},{"generated":{"line":30,"column":26},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":30,"column":29},"source":"main.js","original":{"line":8,"column":27},"name":"document"},{"generated":{"line":30,"column":37},"source":"main.js","original":{"line":8,"column":35}},{"generated":{"line":30,"column":38},"source":"main.js","original":{"line":8,"column":36},"name":"querySelector"},{"generated":{"line":30,"column":51},"source":"main.js","original":{"line":8,"column":27}},{"generated":{"line":30,"column":52},"source":"main.js","original":{"line":8,"column":50}},{"generated":{"line":30,"column":63},"source":"main.js","original":{"line":8,"column":27}},{"generated":{"line":30,"column":64},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":31,"column":12},"source":"main.js","original":{"line":9,"column":10},"name":"canvas"},{"generated":{"line":31,"column":18},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":31,"column":21},"source":"main.js","original":{"line":9,"column":19},"name":"document"},{"generated":{"line":31,"column":29},"source":"main.js","original":{"line":9,"column":27}},{"generated":{"line":31,"column":30},"source":"main.js","original":{"line":9,"column":28},"name":"getElementById"},{"generated":{"line":31,"column":44},"source":"main.js","original":{"line":9,"column":19}},{"generated":{"line":31,"column":45},"source":"main.js","original":{"line":9,"column":43}},{"generated":{"line":31,"column":56},"source":"main.js","original":{"line":9,"column":19}},{"generated":{"line":31,"column":57},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":32,"column":12},"source":"main.js","original":{"line":10,"column":10},"name":"context"},{"generated":{"line":32,"column":19},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":32,"column":22},"source":"main.js","original":{"line":10,"column":20},"name":"canvas"},{"generated":{"line":32,"column":28},"source":"main.js","original":{"line":10,"column":26}},{"generated":{"line":32,"column":29},"source":"main.js","original":{"line":10,"column":27},"name":"getContext"},{"generated":{"line":32,"column":39},"source":"main.js","original":{"line":10,"column":20}},{"generated":{"line":32,"column":40},"source":"main.js","original":{"line":10,"column":38}},{"generated":{"line":32,"column":44},"source":"main.js","original":{"line":10,"column":20}},{"generated":{"line":32,"column":45},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":33,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":34,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":34,"column":19},"source":"main.js","original":{"line":11,"column":24},"name":"navigator"},{"generated":{"line":34,"column":28},"source":"main.js","original":{"line":11,"column":33}},{"generated":{"line":34,"column":29},"source":"main.js","original":{"line":11,"column":34},"name":"mediaDevices"},{"generated":{"line":34,"column":41},"source":"main.js","original":{"line":11,"column":24}},{"generated":{"line":34,"column":42},"source":"main.js","original":{"line":11,"column":47},"name":"getUserMedia"},{"generated":{"line":34,"column":54},"source":"main.js","original":{"line":11,"column":24}},{"generated":{"line":34,"column":55},"source":"main.js","original":{"line":11,"column":60}},{"generated":{"line":35,"column":14},"source":"main.js","original":{"line":11,"column":62},"name":"video"},{"generated":{"line":35,"column":19},"source":"main.js","original":{"line":11,"column":67}},{"generated":{"line":35,"column":21},"source":"main.js","original":{"line":11,"column":69}},{"generated":{"line":36,"column":12},"source":"main.js","original":{"line":11,"column":60}},{"generated":{"line":36,"column":13},"source":"main.js","original":{"line":11,"column":24}},{"generated":{"line":36,"column":14},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":38,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":39,"column":12},"source":"main.js","original":{"line":11,"column":10},"name":"video"},{"generated":{"line":39,"column":17},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":40,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":41,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":41,"column":19},"source":"main.js","original":{"line":14,"column":10},"name":"faceapi"},{"generated":{"line":41,"column":26},"source":"main.js","original":{"line":14,"column":17}},{"generated":{"line":41,"column":27},"source":"main.js","original":{"line":14,"column":18},"name":"nets"},{"generated":{"line":41,"column":31},"source":"main.js","original":{"line":14,"column":10}},{"generated":{"line":41,"column":32},"source":"main.js","original":{"line":14,"column":23},"name":"tinyFaceDetector"},{"generated":{"line":41,"column":48},"source":"main.js","original":{"line":14,"column":10}},{"generated":{"line":41,"column":49},"source":"main.js","original":{"line":14,"column":40},"name":"loadFromUri"},{"generated":{"line":41,"column":60},"source":"main.js","original":{"line":14,"column":10}},{"generated":{"line":41,"column":61},"source":"main.js","original":{"line":14,"column":52}},{"generated":{"line":41,"column":70},"source":"main.js","original":{"line":14,"column":10}},{"generated":{"line":41,"column":71},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":43,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":44,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":45,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":45,"column":19},"source":"main.js","original":{"line":15,"column":10},"name":"faceapi"},{"generated":{"line":45,"column":26},"source":"main.js","original":{"line":15,"column":17}},{"generated":{"line":45,"column":27},"source":"main.js","original":{"line":15,"column":18},"name":"nets"},{"generated":{"line":45,"column":31},"source":"main.js","original":{"line":15,"column":10}},{"generated":{"line":45,"column":32},"source":"main.js","original":{"line":15,"column":23},"name":"faceExpressionNet"},{"generated":{"line":45,"column":49},"source":"main.js","original":{"line":15,"column":10}},{"generated":{"line":45,"column":50},"source":"main.js","original":{"line":15,"column":41},"name":"loadFromUri"},{"generated":{"line":45,"column":61},"source":"main.js","original":{"line":15,"column":10}},{"generated":{"line":45,"column":62},"source":"main.js","original":{"line":15,"column":53}},{"generated":{"line":45,"column":71},"source":"main.js","original":{"line":15,"column":10}},{"generated":{"line":45,"column":72},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":47,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":48,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":49,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":49,"column":19},"source":"main.js","original":{"line":16,"column":10},"name":"faceapi"},{"generated":{"line":49,"column":26},"source":"main.js","original":{"line":16,"column":17}},{"generated":{"line":49,"column":27},"source":"main.js","original":{"line":16,"column":18},"name":"nets"},{"generated":{"line":49,"column":31},"source":"main.js","original":{"line":16,"column":10}},{"generated":{"line":49,"column":32},"source":"main.js","original":{"line":16,"column":23},"name":"faceLandmark68Net"},{"generated":{"line":49,"column":49},"source":"main.js","original":{"line":16,"column":10}},{"generated":{"line":49,"column":50},"source":"main.js","original":{"line":16,"column":41},"name":"loadFromUri"},{"generated":{"line":49,"column":61},"source":"main.js","original":{"line":16,"column":10}},{"generated":{"line":49,"column":62},"source":"main.js","original":{"line":16,"column":53}},{"generated":{"line":49,"column":71},"source":"main.js","original":{"line":16,"column":10}},{"generated":{"line":49,"column":72},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":51,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":52,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":53,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":53,"column":19},"source":"main.js","original":{"line":17,"column":10},"name":"faceapi"},{"generated":{"line":53,"column":26},"source":"main.js","original":{"line":17,"column":17}},{"generated":{"line":53,"column":27},"source":"main.js","original":{"line":17,"column":18},"name":"nets"},{"generated":{"line":53,"column":31},"source":"main.js","original":{"line":17,"column":10}},{"generated":{"line":53,"column":32},"source":"main.js","original":{"line":17,"column":23},"name":"faceRecognitionNet"},{"generated":{"line":53,"column":50},"source":"main.js","original":{"line":17,"column":10}},{"generated":{"line":53,"column":51},"source":"main.js","original":{"line":17,"column":42},"name":"loadFromUri"},{"generated":{"line":53,"column":62},"source":"main.js","original":{"line":17,"column":10}},{"generated":{"line":53,"column":63},"source":"main.js","original":{"line":17,"column":54}},{"generated":{"line":53,"column":72},"source":"main.js","original":{"line":17,"column":10}},{"generated":{"line":53,"column":73},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":55,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":56,"column":12},"source":"main.js","original":{"line":19,"column":10},"name":"match"},{"generated":{"line":56,"column":17},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":56,"column":20},"source":"main.js","original":{"line":19,"column":18}},{"generated":{"line":56,"column":24},"source":"main.js","original":{"line":19,"column":18},"name":"uploader"},{"generated":{"line":56,"column":41},"source":"main.js","original":{"line":19,"column":18}},{"generated":{"line":56,"column":43},"source":"main.js","original":{"line":19,"column":27}},{"generated":{"line":56,"column":58},"source":"main.js","original":{"line":19,"column":18}},{"generated":{"line":56,"column":60},"source":"main.js","original":{"line":19,"column":44}},{"generated":{"line":56,"column":74},"source":"main.js","original":{"line":19,"column":18}},{"generated":{"line":56,"column":75},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":57,"column":12},"source":"main.js","original":{"line":21,"column":4},"name":"videoContainer"},{"generated":{"line":57,"column":26},"source":"main.js","original":{"line":21,"column":18}},{"generated":{"line":57,"column":27},"source":"main.js","original":{"line":21,"column":19},"name":"srcObject"},{"generated":{"line":57,"column":36},"source":"main.js","original":{"line":21,"column":4}},{"generated":{"line":57,"column":39},"source":"main.js","original":{"line":21,"column":31},"name":"video"},{"generated":{"line":57,"column":44},"source":"main.js","original":{"line":21,"column":4}},{"generated":{"line":59,"column":12},"source":"main.js","original":{"line":23,"column":10},"name":"reDraw"},{"generated":{"line":59,"column":18},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":60,"column":14},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":60,"column":85},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":61,"column":16},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":62,"column":18},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":63,"column":20},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":64,"column":22},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":65,"column":24},"source":"main.js","original":{"line":24,"column":8},"name":"context"},{"generated":{"line":65,"column":31},"source":"main.js","original":{"line":24,"column":15}},{"generated":{"line":65,"column":32},"source":"main.js","original":{"line":24,"column":16},"name":"drawImage"},{"generated":{"line":65,"column":41},"source":"main.js","original":{"line":24,"column":8}},{"generated":{"line":65,"column":42},"source":"main.js","original":{"line":24,"column":26},"name":"videoContainer"},{"generated":{"line":65,"column":56},"source":"main.js","original":{"line":24,"column":8}},{"generated":{"line":65,"column":58},"source":"main.js","original":{"line":24,"column":42}},{"generated":{"line":65,"column":59},"source":"main.js","original":{"line":24,"column":8}},{"generated":{"line":65,"column":61},"source":"main.js","original":{"line":24,"column":45}},{"generated":{"line":65,"column":62},"source":"main.js","original":{"line":24,"column":8}},{"generated":{"line":65,"column":64},"source":"main.js","original":{"line":24,"column":48}},{"generated":{"line":65,"column":67},"source":"main.js","original":{"line":24,"column":8}},{"generated":{"line":65,"column":69},"source":"main.js","original":{"line":24,"column":53}},{"generated":{"line":65,"column":72},"source":"main.js","original":{"line":24,"column":8}},{"generated":{"line":66,"column":24},"source":"main.js","original":{"line":26,"column":8},"name":"requestAnimationFrame"},{"generated":{"line":66,"column":45},"source":"main.js","original":{"line":26,"column":29}},{"generated":{"line":66,"column":46},"source":"main.js","original":{"line":26,"column":30},"name":"reDraw"},{"generated":{"line":66,"column":52},"source":"main.js","original":{"line":26,"column":29}},{"generated":{"line":66,"column":53},"source":"main.js","original":{"line":26,"column":8}},{"generated":{"line":68,"column":22},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":69,"column":22},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":70,"column":24},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":71,"column":20},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":72,"column":18},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":73,"column":16},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":74,"column":14},"source":"main.js","original":{"line":23,"column":19}},{"generated":{"line":74,"column":15},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":76,"column":14},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":76,"column":30},"source":"main.js","original":{"line":23,"column":10},"name":"reDraw"},{"generated":{"line":76,"column":36},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":77,"column":16},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":78,"column":14},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":79,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":79,"column":17},"source":"main.js","original":{"line":30,"column":4}},{"generated":{"line":82,"column":12},"source":"main.js","original":{"line":31,"column":10},"name":"processFace"},{"generated":{"line":82,"column":23},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":83,"column":14},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":83,"column":85},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":84,"column":16},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":85,"column":16},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":86,"column":18},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":87,"column":20},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":88,"column":22},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":89,"column":24},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":90,"column":24},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":90,"column":31},"source":"main.js","original":{"line":32,"column":32},"name":"faceapi"},{"generated":{"line":90,"column":38},"source":"main.js","original":{"line":32,"column":39}},{"generated":{"line":90,"column":39},"source":"main.js","original":{"line":32,"column":40},"name":"detectSingleFace"},{"generated":{"line":90,"column":55},"source":"main.js","original":{"line":32,"column":32}},{"generated":{"line":90,"column":56},"source":"main.js","original":{"line":32,"column":57},"name":"canvas"},{"generated":{"line":90,"column":62},"source":"main.js","original":{"line":32,"column":32}},{"generated":{"line":90,"column":64},"source":"main.js","original":{"line":32,"column":65}},{"generated":{"line":90,"column":68},"source":"main.js","original":{"line":32,"column":69},"name":"faceapi"},{"generated":{"line":90,"column":75},"source":"main.js","original":{"line":32,"column":76}},{"generated":{"line":90,"column":76},"source":"main.js","original":{"line":32,"column":77},"name":"TinyFaceDetectorOptions"},{"generated":{"line":90,"column":99},"source":"main.js","original":{"line":32,"column":65}},{"generated":{"line":90,"column":101},"source":"main.js","original":{"line":32,"column":32}},{"generated":{"line":90,"column":103},"source":"main.js","original":{"line":33,"column":13},"name":"withFaceLandmarks"},{"generated":{"line":90,"column":120},"source":"main.js","original":{"line":32,"column":32}},{"generated":{"line":90,"column":123},"source":"main.js","original":{"line":34,"column":13},"name":"withFaceDescriptor"},{"generated":{"line":90,"column":141},"source":"main.js","original":{"line":32,"column":32}},{"generated":{"line":90,"column":143},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":92,"column":22},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":93,"column":24},"source":"main.js","original":{"line":32,"column":14},"name":"detection"},{"generated":{"line":93,"column":33},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":95,"column":24},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":95,"column":30},"source":"main.js","original":{"line":36,"column":12}},{"generated":{"line":95,"column":37},"source":"main.js","original":{"line":36,"column":19},"name":"detection"},{"generated":{"line":95,"column":46},"source":"main.js","original":{"line":36,"column":12}},{"generated":{"line":95,"column":51},"source":"main.js","original":{"line":36,"column":33}},{"generated":{"line":95,"column":62},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":96,"column":26},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":97,"column":26},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":98,"column":24},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":100,"column":24},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":102,"column":22},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":103,"column":24},"source":"main.js","original":{"line":37,"column":8},"name":"match"},{"generated":{"line":103,"column":29},"source":"main.js","original":{"line":37,"column":13}},{"generated":{"line":103,"column":30},"source":"main.js","original":{"line":37,"column":14},"name":"detection"},{"generated":{"line":103,"column":39},"source":"main.js","original":{"line":37,"column":23}},{"generated":{"line":103,"column":40},"source":"main.js","original":{"line":37,"column":24},"name":"descriptor"},{"generated":{"line":103,"column":50},"source":"main.js","original":{"line":37,"column":13}},{"generated":{"line":103,"column":51},"source":"main.js","original":{"line":37,"column":8}},{"generated":{"line":103,"column":52},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":103,"column":53},"source":"main.js","original":{"line":37,"column":37}},{"generated":{"line":105,"column":22},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":106,"column":22},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":107,"column":24},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":108,"column":20},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":109,"column":18},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":110,"column":16},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":111,"column":14},"source":"main.js","original":{"line":31,"column":24}},{"generated":{"line":111,"column":15},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":113,"column":14},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":113,"column":30},"source":"main.js","original":{"line":31,"column":10},"name":"processFace"},{"generated":{"line":113,"column":41},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":114,"column":16},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":115,"column":14},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":116,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":118,"column":12},"source":"main.js","original":{"line":40,"column":4},"name":"setInterval"},{"generated":{"line":118,"column":23},"source":"main.js","original":{"line":40,"column":15}},{"generated":{"line":118,"column":24},"source":"main.js","original":{"line":40,"column":16},"name":"processFace"},{"generated":{"line":118,"column":35},"source":"main.js","original":{"line":40,"column":15}},{"generated":{"line":118,"column":37},"source":"main.js","original":{"line":40,"column":29}},{"generated":{"line":118,"column":41},"source":"main.js","original":{"line":40,"column":15}},{"generated":{"line":118,"column":42},"source":"main.js","original":{"line":40,"column":4}},{"generated":{"line":119,"column":12},"source":"main.js","original":{"line":42,"column":4},"name":"requestAnimationFrame"},{"generated":{"line":119,"column":33},"source":"main.js","original":{"line":42,"column":25}},{"generated":{"line":119,"column":34},"source":"main.js","original":{"line":42,"column":26},"name":"reDraw"},{"generated":{"line":119,"column":40},"source":"main.js","original":{"line":42,"column":25}},{"generated":{"line":119,"column":41},"source":"main.js","original":{"line":42,"column":4}},{"generated":{"line":121,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":122,"column":10},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":123,"column":12},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":124,"column":8},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":125,"column":6},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":126,"column":4},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":127,"column":2},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":127,"column":3},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":129,"column":2},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":129,"column":18},"source":"main.js","original":{"line":7,"column":6},"name":"main"},{"generated":{"line":129,"column":22},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":130,"column":4},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":131,"column":2},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":132,"column":0},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":132,"column":3},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":134,"column":0},"source":"main.js","original":{"line":45,"column":0},"name":"main"},{"generated":{"line":134,"column":4},"source":"main.js","original":{"line":45,"column":4}},{"generated":{"line":135,"column":0},"source":"main.js","original":{"line":47,"column":0}},{"generated":{"line":135,"column":4},"source":"main.js","original":{"line":47,"column":6},"name":"nav"},{"generated":{"line":135,"column":7},"source":"main.js","original":{"line":47,"column":9}},{"generated":{"line":135,"column":10},"source":"main.js","original":{"line":47,"column":12},"name":"document"},{"generated":{"line":135,"column":18},"source":"main.js","original":{"line":47,"column":20}},{"generated":{"line":135,"column":19},"source":"main.js","original":{"line":47,"column":21},"name":"querySelector"},{"generated":{"line":135,"column":32},"source":"main.js","original":{"line":47,"column":12}},{"generated":{"line":135,"column":33},"source":"main.js","original":{"line":47,"column":35}},{"generated":{"line":135,"column":43},"source":"main.js","original":{"line":47,"column":12}},{"generated":{"line":135,"column":44},"source":"main.js","original":{"line":47,"column":0}},{"generated":{"line":136,"column":0},"source":"main.js","original":{"line":49,"column":0},"name":"document"},{"generated":{"line":136,"column":8},"source":"main.js","original":{"line":49,"column":8}},{"generated":{"line":136,"column":9},"source":"main.js","original":{"line":49,"column":9},"name":"querySelector"},{"generated":{"line":136,"column":22},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":136,"column":23},"source":"main.js","original":{"line":49,"column":23}},{"generated":{"line":136,"column":32},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":136,"column":34},"source":"main.js","original":{"line":49,"column":34},"name":"addEventListener"},{"generated":{"line":136,"column":50},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":136,"column":51},"source":"main.js","original":{"line":49,"column":51}},{"generated":{"line":136,"column":58},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":136,"column":60},"source":"main.js","original":{"line":49,"column":59}},{"generated":{"line":136,"column":70},"source":"main.js","original":{"line":49,"column":60},"name":"e"},{"generated":{"line":136,"column":71},"source":"main.js","original":{"line":49,"column":59}},{"generated":{"line":136,"column":73},"source":"main.js","original":{"line":49,"column":66}},{"generated":{"line":137,"column":2},"source":"main.js","original":{"line":50,"column":2},"name":"e"},{"generated":{"line":137,"column":3},"source":"main.js","original":{"line":50,"column":3}},{"generated":{"line":137,"column":4},"source":"main.js","original":{"line":50,"column":4},"name":"currentTarget"},{"generated":{"line":137,"column":17},"source":"main.js","original":{"line":50,"column":2}},{"generated":{"line":137,"column":18},"source":"main.js","original":{"line":50,"column":18},"name":"classList"},{"generated":{"line":137,"column":27},"source":"main.js","original":{"line":50,"column":2}},{"generated":{"line":137,"column":28},"source":"main.js","original":{"line":50,"column":28},"name":"toggle"},{"generated":{"line":137,"column":34},"source":"main.js","original":{"line":50,"column":2}},{"generated":{"line":137,"column":35},"source":"main.js","original":{"line":50,"column":35}},{"generated":{"line":137,"column":43},"source":"main.js","original":{"line":50,"column":2}},{"generated":{"line":138,"column":2},"source":"main.js","original":{"line":51,"column":2},"name":"nav"},{"generated":{"line":138,"column":5},"source":"main.js","original":{"line":51,"column":5}},{"generated":{"line":138,"column":6},"source":"main.js","original":{"line":51,"column":6},"name":"classList"},{"generated":{"line":138,"column":15},"source":"main.js","original":{"line":51,"column":2}},{"generated":{"line":138,"column":16},"source":"main.js","original":{"line":51,"column":16},"name":"toggle"},{"generated":{"line":138,"column":22},"source":"main.js","original":{"line":51,"column":2}},{"generated":{"line":138,"column":23},"source":"main.js","original":{"line":51,"column":23}},{"generated":{"line":138,"column":29},"source":"main.js","original":{"line":51,"column":2}},{"generated":{"line":139,"column":0},"source":"main.js","original":{"line":52,"column":1}},{"generated":{"line":139,"column":1},"source":"main.js","original":{"line":49,"column":0}}],"sources":{"main.js":"import '../node_modules/babel-polyfill';\r\n\r\nimport * as faceapi from '../node_modules/face-api.js';\r\n\r\nimport uploader from './uploader';\r\n\r\nconst main = async() => {\r\n    const videoContainer = document.querySelector('.js-video');\r\n    const canvas = document.getElementById('js-canvas');\r\n    const context = canvas.getContext('2d');\r\n    const video = await navigator.mediaDevices.getUserMedia({ video: true });\r\n\r\n    //librerias faceapi\r\n    await faceapi.nets.tinyFaceDetector.loadFromUri('/models')\r\n    await faceapi.nets.faceExpressionNet.loadFromUri('/models')\r\n    await faceapi.nets.faceLandmark68Net.loadFromUri('/models')\r\n    await faceapi.nets.faceRecognitionNet.loadFromUri('/models')\r\n\r\n    const match = uploader('.input-submit', '.images-list');\r\n\r\n    videoContainer.srcObject = video;\r\n\r\n    const reDraw = async() => {\r\n        context.drawImage(videoContainer, 0, 0, 640, 480);\r\n\r\n        requestAnimationFrame(reDraw);\r\n\r\n    }\r\n\r\n    // procesado de imagenes del canvas\r\n    const processFace = async() => {\r\n        const detection = await faceapi.detectSingleFace(canvas, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor()\r\n            //console.log(detection);\r\n        if (typeof detection === 'undefined') return;\r\n        match(detection.descriptor); // comparacion con el resultado de las detecciones del contenedor de imagenes\r\n    }\r\n\r\n    setInterval(processFace, 1000); \r\n\r\n    requestAnimationFrame(reDraw);\r\n}\r\n\r\nmain();\r\n\r\nconst nav = document.querySelector('#navhamb')\r\n\r\ndocument.querySelector('#burger').addEventListener('click',(e) => {\r\n  e.currentTarget.classList.toggle(\"active\")\r\n  nav.classList.toggle('show')\r\n})"},"lineCount":null}},"error":null,"hash":"6b880f9ca50dc840b10343dc9ab6b9eb","cacheData":{"env":{}}}