{"dependencies":[{"name":"tslib","loc":{"line":1,"column":50}},{"name":"@tensorflow/tfjs-core","loc":{"line":2,"column":20}},{"name":"../dom","loc":{"line":3,"column":27}},{"name":"../NeuralNetwork","loc":{"line":4,"column":30}},{"name":"../ops","loc":{"line":5,"column":26}},{"name":"./denseBlock","loc":{"line":6,"column":28}},{"name":"./extractParamsFromWeigthMapTiny","loc":{"line":7,"column":47}},{"name":"./extractParamsTiny","loc":{"line":8,"column":34}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TinyFaceFeatureExtractor = undefined;\n\nvar _tslib = require(\"tslib\");\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar tf = _interopRequireWildcard(_tfjsCore);\n\nvar _dom = require(\"../dom\");\n\nvar _NeuralNetwork = require(\"../NeuralNetwork\");\n\nvar _ops = require(\"../ops\");\n\nvar _denseBlock = require(\"./denseBlock\");\n\nvar _extractParamsFromWeigthMapTiny = require(\"./extractParamsFromWeigthMapTiny\");\n\nvar _extractParamsTiny = require(\"./extractParamsTiny\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar TinyFaceFeatureExtractor = /** @class */function (_super) {\n  (0, _tslib.__extends)(TinyFaceFeatureExtractor, _super);\n  function TinyFaceFeatureExtractor() {\n    return _super.call(this, 'TinyFaceFeatureExtractor') || this;\n  }\n  TinyFaceFeatureExtractor.prototype.forwardInput = function (input) {\n    var params = this.params;\n    if (!params) {\n      throw new Error('TinyFaceFeatureExtractor - load model before inference');\n    }\n    return tf.tidy(function () {\n      var batchTensor = input.toBatchTensor(112, true);\n      var meanRgb = [122.782, 117.001, 104.298];\n      var normalized = (0, _ops.normalize)(batchTensor, meanRgb).div(tf.scalar(255));\n      var out = (0, _denseBlock.denseBlock3)(normalized, params.dense0, true);\n      out = (0, _denseBlock.denseBlock3)(out, params.dense1);\n      out = (0, _denseBlock.denseBlock3)(out, params.dense2);\n      out = tf.avgPool(out, [14, 14], [2, 2], 'valid');\n      return out;\n    });\n  };\n  TinyFaceFeatureExtractor.prototype.forward = function (input) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var _a;\n      return (0, _tslib.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, (0, _dom.toNetInput)(input)];\n          case 1:\n            return [2 /*return*/, _a.apply(this, [_b.sent()])];\n        }\n      });\n    });\n  };\n  TinyFaceFeatureExtractor.prototype.getDefaultModelName = function () {\n    return 'face_feature_extractor_tiny_model';\n  };\n  TinyFaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    return (0, _extractParamsFromWeigthMapTiny.extractParamsFromWeigthMapTiny)(weightMap);\n  };\n  TinyFaceFeatureExtractor.prototype.extractParams = function (weights) {\n    return (0, _extractParamsTiny.extractParamsTiny)(weights);\n  };\n  return TinyFaceFeatureExtractor;\n}(_NeuralNetwork.NeuralNetwork);\nexports.TinyFaceFeatureExtractor = TinyFaceFeatureExtractor;\n//# sourceMappingURL=TinyFaceFeatureExtractor.js.map"},"hash":"062796978dacfe9567867fa73e02c59c"}