{"dependencies":[{"name":"@tensorflow/tfjs-core","loc":{"line":1,"column":20}},{"name":"../common","loc":{"line":2,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.boxPredictionLayer = boxPredictionLayer;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar tf = _interopRequireWildcard(_tfjsCore);\n\nvar _common = require(\"../common\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction boxPredictionLayer(x, params) {\n  return tf.tidy(function () {\n    var batchSize = x.shape[0];\n    var boxPredictionEncoding = tf.reshape((0, _common.convLayer)(x, params.box_encoding_predictor), [batchSize, -1, 1, 4]);\n    var classPrediction = tf.reshape((0, _common.convLayer)(x, params.class_predictor), [batchSize, -1, 3]);\n    return {\n      boxPredictionEncoding: boxPredictionEncoding,\n      classPrediction: classPrediction\n    };\n  });\n}\n//# sourceMappingURL=boxPredictionLayer.js.map"},"hash":"c4d8a91a2b548297c5df8343093cdcce"}